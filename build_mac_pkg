#!/bin/zsh

# The only argument to this script is the architecture that should be built.
# The options are: intel or arm
# The script reinvokes if the current architecture is not the desired one.
#
desired="$1"
if [[ $desired == "intel" ]]
then
    desired_arch="i386"
    desired_arch_option="x86_64"
elif [[ $desired == "arm" ]]
then
    desired_arch="arm64"
    desired_arch_option="arm64"
else
    echo "Unknown platform to build: $desired"
    exit 1
fi
current_arch=`arch`
if [[ $current_arch != $desired_arch ]]
then
    env /usr/bin/arch -$desired_arch_option /bin/zsh ./build_mac_pkg $desired
    exit $?
fi

#===============================================
# Setup the correct python environment
#===============================================
if [[ `arch` == "i386" ]]
then
    echo "Activating i386 virtual environment for Python"
    source /Users/dws/i386/bin/activate
elif [[ `arch` == 'arm64' ]]
    echo "Activating arm64 virtual environment for Python"
    source /Users/dws/arm64/bin/activate
then

fi

echo "Running build for `arch` architecure"

#===============================================
# Clean-up
#===============================================
rm -rf dist
rm -rf build

#===============================================
# Run pyinstaller
#===============================================
version="`cat version`"
echo "Creating installer for version ${version}"
if [[ $current_arch == "i386" ]]
then
    pyinstaller -y guitar-tap-386.spec
else
    pyinstaller -y guitar-tap.spec
fi
echo "Removing dist/guitar-tap"
rm -rf dist/guitar-tap

s!/bin/sh
test -f "Guitar Tap.pkg" && rm "Guitar Tap.pkg"
# Create the pkg.
productbuild --sign "Developer ID Installer: David Smith (43QHHT3XK2)" --component dist/Guitar\ Tap.app /Applications Guitar\ Tap.pkg
#===============================================
# Create the pkg.
#===============================================
echo "Creating the PKG"
pkg_name="Guitar_Tap_V${version}_${desired}.pkg"
test -f $pkg_name && rm $pkg_name

productbuild --sign "Developer ID Installer: David Smith (43QHHT3XK2)" --component dist/Guitar\ Tap.app /Applications $pkg_name
if [ $? -ne 0 ]; then
    echo "Creating the PKG failed"
    exit 1
fi

echo "Done Creating the PKG"

#===============================================
# Notarize the pkg.
#===============================================
echo "Notarizing the PKG"
xcrun notarytool submit $pkg_name --wait --apple-id dws@dolcesfogato.com --password ouio-uwqe-qzhz-ukmm --team-id 43QHHT3XK2
if [ $? -ne 0 ]; then
    echo "Notarizing the PKG failed"
    exit 1
fi
echo "Done Notarizing the PKG"

#===============================================
# Staple the pkg.
#===============================================
echo "Stapling the PKG"
xcrun stapler staple $pkg_name
if [ $? -ne 0 ]; then
    echo "Stapling the PKG failed"
    exit 1
fi

echo "Done creating ${pkg_name}"