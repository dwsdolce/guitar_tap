#!/bin/zsh

# The only argument to this script is the architecture that should be built.
# The options are: intel or arm
# The script reinvokes if the current architecture is not the desired one.
#
desired="$1"
if [[ $desired == "intel" ]]
then
    desired_arch="i386"
    desired_arch_option="x86_64"
elif [[ $desired == "arm" ]]
then
    desired_arch="arm64"
    desired_arch_option="arm64"
else
    echo "Unknown platform to build: $desired"
    exit 1
fi
current_arch=`arch`
if [[ $current_arch != $desired_arch ]]
then
    env /usr/bin/arch -$desired_arch_option /bin/zsh ./build_mac_dmg $desired
    exit $?
fi

#===============================================
# Setup the correct python environment
#===============================================
if [[ `arch` == "i386" ]]
then
    echo "Activating i386 virtual environment for Python"
    source /Users/dws/i386/bin/activate
elif [[ `arch` == 'arm64' ]]
    echo "Activating arm64 virtual environment for Python"
    source /Users/dws/arm64/bin/activate
then

fi

echo "Running build for `arch` architecure"

#===============================================
# Clean-up
#===============================================
rm -rf dist
rm -rf build

#===============================================
# Run pyinstaller
#===============================================
# Get the product version
version="`cat version`"
echo "Creating installer for version ${version}"
pyinstaller -y guitar-tap.spec

echo "Removing dist/guitar-tap"
rm -rf dist/guitar-tap

#===============================================
# Create the dmg.
#===============================================
echo "Creating the DMG"
dmg_name="Guitar_Tap_V${version}_${desired}.dmg"
test -f $dmg_name && rm $dmg_name

create-dmg \
  --volname "Guitar Tap $version Install" \
  --background "icons/guitar-tap-dmg.png" \
  --window-pos 1 1 \
  --icon "Guitar Tap.app" 190 350 \
  --window-size 640 535 \
  --icon-size 110 \
  --icon "Applications" 110 110 \
  --hide-extension "Applications" \
  --app-drop-link 450 360 \
  --format ULFO \
  --hdiutil-verbose \
  --volicon "icons/guitar-tap.icns" \
  $dmg_name \
  "dist/"

if [ $? -ne 0 ]; then
    echo "Creating the DMG failed"
    exit 1
fi

echo "Signing the DMG"
/usr/bin/codesign -s "Developer ID Application: David Smith (43QHHT3XK2)" $dmg_name
if [ $? -ne 0 ]; then
    echo "Signing the DMG failed"
    exit 1
fi

echo "Done Creating the DMG"

#===============================================
# Notarize the dmg.
#===============================================
echo "Notarizing the DMG"
xcrun notarytool submit $dmg_name --wait --apple-id dws@dolcesfogato.com --password ouio-uwqe-qzhz-ukmm --team-id 43QHHT3XK2
if [ $? -ne 0 ]; then
    echo "Notarizing the DMG failed"
    exit 1
fi
echo "Done Notarizing the DMG"

#===============================================
# Staple the dmg.
#===============================================
echo "Stapling the DMG"
xcrun stapler staple $dmg_name
if [ $? -ne 0 ]; then
    echo "Stapling the DMG failed"
    exit 1
fi

echo "Done creating ${dmg_name}"

